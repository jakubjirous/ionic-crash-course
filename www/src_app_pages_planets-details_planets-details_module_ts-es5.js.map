{"version":3,"sources":["webpack:///src/app/pages/planets-details/planets-details-routing.module.ts","webpack:///src/app/pages/planets-details/planets-details.module.ts","webpack:///src/app/pages/planets-details/planets-details.page.ts","webpack:///src/app/pages/planets-details/planets-details.page.scss","webpack:///src/app/pages/planets-details/planets-details.page.html"],"names":["routes","path","component","PlanetsDetailsPage","PlanetsDetailsPageRoutingModule","NgModule","imports","RouterModule","exports","PlanetsDetailsPageModule","CommonModule","FormsModule","IonicModule","declarations","activatedRoute","api","planetId","snapshot","paramMap","get","getPlanet","subscribe","response","planet","ActivatedRoute","ApiService","Component","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,mDAAAC;AAFb,OADqB,CAAvB;;UAWaC,gCAA+B;AAAA;AAAA,O;;AAA/BA,sCAA+B,uDAJ3C,+CAAAC,QAAA,EAAS;AACRC,eAAO,EAAE,CAAC,6CAAAC,YAAA,UAAsBP,MAAtB,CAAD,CADD;AAERQ,eAAO,EAAE,CAAC,6CAAAD,YAAD;AAFD,OAAT,CAI2C,GAA/BH,gCAA+B,CAA/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAK,yBAAwB;AAAA;AAAA,O;;AAAxBA,+BAAwB,uDATpC,+CAAAJ,QAAA,EAAS;AACRC,eAAO,EAAE,CACP,6CAAAI,YADO,EAEP,4CAAAC,WAFO,EAGP,4CAAAC,WAHO,EAIP,6DAAAR,+BAJO,CADD;AAORS,oBAAY,EAAE,CAAC,mDAAAV,kBAAD;AAPN,OAAT,CASoC,GAAxBM,yBAAwB,CAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCTAN,mBAAkB;AAI3B,oCAAoBW,cAApB,EAA4DC,GAA5D,EAA6E;AAAA;;AAAzD,eAAAD,cAAA,GAAAA,cAAA;AAAwC,eAAAC,GAAA,GAAAA,GAAA;AAC3D;;AAL0B;AAAA;AAAA,iBAO3B,oBAAW;AAAA;;AACP,gBAAMC,QAAQ,GAAG,KAAKF,cAAL,CAAoBG,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,IAA1C,CAAjB;AACA,iBAAKJ,GAAL,CAASK,SAAT,CAAmBJ,QAAnB,EAA6BK,SAA7B,CAAuC,UAAAC,QAAQ,EAAI;AAC/C,mBAAI,CAACC,MAAL,GAAcD,QAAd;AACH,aAFD;AAGH;AAZ0B;;AAAA;AAAA,S;;;;gBARtB,6CAAAE;;gBACA,uDAAAC;;;;AAOItB,yBAAkB,uDAL9B,+CAAAuB,SAAA,EAAU;AACPC,gBAAQ,EAAE,qBADH;AAEPC,gBAAQ,EAAR,6EAFO;;AAAA,OAAV,CAK8B,GAAlBzB,mBAAkB,CAAlB;;;;;;;;;;;;;;;ACVb;;;AAAA,uCAAe,6KAAf;;;;;;;;;;;;;;;ACAA;;;AAAA,uCAAe,28EAAf","file":"src_app_pages_planets-details_planets-details_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PlanetsDetailsPage } from './planets-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PlanetsDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PlanetsDetailsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PlanetsDetailsPageRoutingModule } from './planets-details-routing.module';\n\nimport { PlanetsDetailsPage } from './planets-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PlanetsDetailsPageRoutingModule\n  ],\n  declarations: [PlanetsDetailsPage]\n})\nexport class PlanetsDetailsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Planet } from '../../types/planet';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../services/api/api.service';\n\n@Component({\n    selector: 'app-planets-details',\n    templateUrl: './planets-details.page.html',\n    styleUrls: ['./planets-details.page.scss'],\n})\nexport class PlanetsDetailsPage implements OnInit {\n\n    planet: Planet;\n\n    constructor(private activatedRoute: ActivatedRoute, private api: ApiService) {\n    }\n\n    ngOnInit() {\n        const planetId = this.activatedRoute.snapshot.paramMap.get('id');\n        this.api.getPlanet(planetId).subscribe(response => {\n            this.planet = response;\n        });\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwbGFuZXRzLWRldGFpbHMucGFnZS5zY3NzIn0= */\";","export default \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button defaultHref=\\\"/tabs/planets\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>{{ planet?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\" *ngIf=\\\"planet\\\">\\n    <ion-card *ngIf=\\\"planet?.rotation_period\\\">\\n        <ion-card-header>\\n            <ion-card-title>Rotation period</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n            {{ planet?.rotation_period }}\\n        </ion-card-content>\\n    </ion-card>\\n    <ion-card *ngIf=\\\"planet?.orbital_period\\\">\\n        <ion-card-header>\\n            <ion-card-title>Orbital period</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n            {{ planet?.orbital_period }}\\n        </ion-card-content>\\n    </ion-card>\\n    <ion-card *ngIf=\\\"planet?.diameter\\\">\\n        <ion-card-header>\\n            <ion-card-title>Diameter</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n            {{ planet?.diameter }}\\n        </ion-card-content>\\n    </ion-card>\\n    <ion-card *ngIf=\\\"planet?.climate\\\">\\n        <ion-card-header>\\n            <ion-card-title>Climate</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n            {{ planet?.climate }}\\n        </ion-card-content>\\n    </ion-card>\\n    <ion-card *ngIf=\\\"planet?.gravity\\\">\\n        <ion-card-header>\\n            <ion-card-title>Gravity</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n            {{ planet?.gravity }}\\n        </ion-card-content>\\n    </ion-card>\\n    <ion-card *ngIf=\\\"planet?.terrain\\\">\\n        <ion-card-header>\\n            <ion-card-title>Terrain</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n            {{ planet?.terrain }}\\n        </ion-card-content>\\n    </ion-card>\\n    <ion-card *ngIf=\\\"planet?.surface_water\\\">\\n        <ion-card-header>\\n            <ion-card-title>Surface water</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n            {{ planet?.surface_water }}\\n        </ion-card-content>\\n    </ion-card>\\n    <ion-card *ngIf=\\\"planet?.population\\\">\\n        <ion-card-header>\\n            <ion-card-title>Population</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n            {{ planet?.population }}\\n        </ion-card-content>\\n    </ion-card>\\n</ion-content>\\n\";"]}