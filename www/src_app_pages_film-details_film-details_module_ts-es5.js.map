{"version":3,"sources":["webpack:///src/app/pages/film-details/film-details-routing.module.ts","webpack:///src/app/pages/film-details/film-details.module.ts","webpack:///src/app/pages/film-details/film-details.page.ts","webpack:///src/app/services/favorite/favorite.service.ts","webpack:///src/app/pages/film-details/film-details.page.scss","webpack:///src/app/pages/film-details/film-details.page.html"],"names":["routes","path","component","FilmDetailsPage","FilmDetailsPageRoutingModule","NgModule","imports","RouterModule","exports","FilmDetailsPageModule","CommonModule","FormsModule","IonicModule","declarations","activatedRoute","api","emailComposer","favoriteService","isFavorite","filmId","snapshot","paramMap","get","getFilm","subscribe","response","film","then","favoriteFilm","unfavoriteFilm","email","to","subject","title","body","opening_crawl","isHtml","open","ActivatedRoute","ApiService","EmailComposer","FavoriteService","Component","selector","template","STORAGE_KEY","storage","init","create","getAllFavouriteFilms","result","indexOf","push","set","index","splice","Storage","Injectable","providedIn"],"mappings":"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","file":"src_app_pages_film-details_film-details_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FilmDetailsPage } from './film-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FilmDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FilmDetailsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FilmDetailsPageRoutingModule } from './film-details-routing.module';\n\nimport { FilmDetailsPage } from './film-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FilmDetailsPageRoutingModule\n  ],\n  declarations: [FilmDetailsPage]\n})\nexport class FilmDetailsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Film } from '../../types/film';\nimport { ApiService } from '../../services/api/api.service';\nimport { EmailComposer } from '@ionic-native/email-composer/ngx';\nimport { FavoriteService } from '../../services/favorite/favorite.service';\n\n@Component({\n    selector: 'app-film-details',\n    templateUrl: './film-details.page.html',\n    styleUrls: ['./film-details.page.scss'],\n})\nexport class FilmDetailsPage implements OnInit {\n\n    film: Film;\n    isFavorite: boolean = false;\n    filmId: string | null = null;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private api: ApiService,\n        private emailComposer: EmailComposer,\n        private favoriteService: FavoriteService\n    ) {\n    }\n\n    ngOnInit() {\n        this.filmId = this.activatedRoute.snapshot.paramMap.get('id');\n\n        this.api.getFilm(this.filmId).subscribe(response => {\n            this.film = response;\n        });\n\n        this.favoriteService.isFavorite(this.filmId).then(isFavorite => {\n            this.isFavorite = isFavorite\n        });\n    }\n\n    favoriteFilm(): void {\n        this.favoriteService.favoriteFilm(this.filmId).then(() => {\n            this.isFavorite = true\n        });\n    }\n\n    unfavoriteFilm(): void {\n        this.favoriteService.unfavoriteFilm(this.filmId).then(() => {\n            this.isFavorite = false\n        });\n    }\n\n    shareFilm(): void {\n        const email = {\n            to: 'info@jakubjirous.cz',\n            subject: `I love this one ${this.film?.title}`,\n            body: `Can you remember the opening?<br/><br/>\"${this.film?.opening_crawl}\"`,\n            isHtml: true,\n        }\n\n        this.emailComposer.open(email);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage-angular';\nimport { Film } from '../../types/film';\n\nconst STORAGE_KEY = 'favoriteFilms';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FavoriteService {\n\n    constructor(private storage: Storage) {\n        this.init()\n    }\n\n    async init() {\n        await this.storage.create();\n    }\n\n    getAllFavouriteFilms(): Promise<string[]> {\n        return this.storage.get(STORAGE_KEY);\n    }\n\n    isFavorite(filmId: string): Promise<boolean> {\n        return this.getAllFavouriteFilms().then(result => {\n            return result && result.indexOf(filmId) !== -1;\n        });\n    }\n\n    favoriteFilm(filmId: string) {\n        return this.getAllFavouriteFilms().then(result => {\n            if (result) {\n                result.push(filmId)\n                return this.storage.set(STORAGE_KEY, result);\n            } else {\n                return this.storage.set(STORAGE_KEY, [filmId]);\n            }\n        })\n    }\n\n    unfavoriteFilm(filmId: string) {\n        return this.getAllFavouriteFilms().then(result => {\n            if (result) {\n                const index = result.indexOf(filmId);\n                result.splice(index, 1);\n                return this.storage.set(STORAGE_KEY, result);\n            }\n        })\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmaWxtLWRldGFpbHMucGFnZS5zY3NzIn0= */\";","export default \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button defaultHref=\\\"/tabs/films\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>{{ film?.title }}</ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button (click)=\\\"unfavoriteFilm()\\\" *ngIf=\\\"isFavorite\\\">\\n                <ion-icon name=\\\"star\\\" slot=\\\"icon-only\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button (click)=\\\"favoriteFilm()\\\" *ngIf=\\\"!isFavorite\\\">\\n                <ion-icon name=\\\"star-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\" *ngIf=\\\"film\\\">\\n\\n    <ion-card *ngIf=\\\"film?.opening_crawl\\\">\\n        <ion-card-header>\\n            <ion-card-title>{{ film?.title }}</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n            {{ film?.opening_crawl }}\\n        </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card *ngIf=\\\"film?.director\\\">\\n        <ion-card-header>\\n            <ion-card-title>Director</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n            {{ film?.director }}\\n        </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card *ngIf=\\\"film?.producer\\\">\\n        <ion-card-header>\\n            <ion-card-title>Producer</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n            {{ film?.producer }}\\n        </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card *ngIf=\\\"film?.release_date\\\">\\n        <ion-card-header>\\n            <ion-card-title>Release date</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n            {{ film?.release_date }}\\n        </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card *ngIf=\\\"film?.episode_id\\\">\\n        <ion-card-header>\\n            <ion-card-title>Episode</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n            {{ film?.episode_id }}\\n        </ion-card-content>\\n    </ion-card>\\n\\n    <ion-button expand=\\\"full\\\" (click)=\\\"shareFilm()\\\">\\n        Share by E-mail\\n    </ion-button>\\n</ion-content>\\n\";"]}